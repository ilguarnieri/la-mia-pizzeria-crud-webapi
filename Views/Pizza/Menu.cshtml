
@{
    IEnumerable<Category> categories = ViewData["Categories"] as IEnumerable<Category>;
}

<main class="patter-background p-3 welcome-wrapper d-flex flex-column align-items-center h-100 w-100 justify-content-center">

 
    <div class="p-3 text-center d-none">
        <h1>Attualmente non è presente nessuna pizza nella nostra applicazione!</h1>
    </div>
    

    <div class="container-fluid container-lg d-flex justify-content-center gap-4 mb-4 mt-4 flex-wrap">

         <button id="all" class="pizz_button active btn_category col-12 col-sm-5 col-md-3">
               Tutte
           </button>

        @foreach(Category category in categories)
        {
           <button id="@category.Id" class="pizz_button btn_category col-12 col-sm-5 col-md-3">
               @category.Name
           </button>
        }
    </div>


    <div class="container-fluid container-lg d-flex justify-content-center flex-wrap gap-4 p-3 flex-grow-1">

        <ul class="pizzas_ul">
            
        </ul>              

    </div>
    
</main>


@section Scripts{
<script>

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - P I Z Z E - A X I O S
let pizzas;
const pizzas_ul = document.querySelector('.pizzas_ul');


axios.get('/api/pizzas')
    .then(res => {
        pizzas = res.data;
        pizzas.forEach(addPizza);
        searchCategory();
    })

    .catch(err => {
        console.log(err);
    })


function addPizza(el) {

    //creazione item
    const newItem = document.createElement('li');
    newItem.classList.add('pizza-wrapper', 'd-flex', 'flex-column', 'justify-content-center', 'align-content-center', 'text-center', 'p-4', 'position-relative', 'mb-3')
    newItem.dataset.pizza = el.categoryId;
    pizzas_ul.append(newItem);

    //ancoraggio controller
    const anchorItem = document.createElement('a');
    var myUrl = '@Url.Action("Details","Pizza")/' + el.id;
    anchorItem.href = myUrl;
    newItem.append(anchorItem);

    //div img e prezzo
    const img_wrapper = document.createElement('div');
    img_wrapper.classList.add('img-wrapper', 'mb-3', 'm-auto');
    anchorItem.append(img_wrapper);

    //img
    const imgPizza = document.createElement('img');
    imgPizza.alt = 'foto-pizza';
    if (el.photo == null) {
        imgPizza.src = '/img/back-no-pizza.png';
    } else {
        imgPizza.src = el.photo;
    }
    img_wrapper.append(imgPizza);

    //div prezzo
    const price_wrap = document.createElement('div');
    price_wrap.classList.add('price-wrap', 'd-flex', 'justify-content-end');
    img_wrapper.append(price_wrap);

    //prezzo
    const price = document.createElement('p');
    price.classList.add('price-pizza', 'm-0');
    price.innerHTML = `${el.price} €`;
    price_wrap.append(price);

    //nome pizza
    const name = document.createElement('h3');
    name.classList.add('text-name');
    name.innerHTML = el.name;
    anchorItem.append(name);
}

//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - B T N - C A T E G O R Y

function searchCategory() {
    const btn_categories = document.querySelectorAll('.pizz_button');
    const pizza_wrapper = document.querySelectorAll('.pizza-wrapper');

    for (i = 0; i < btn_categories.length; i++) {

        const btn = btn_categories[i];
        const id = btn_categories[i].id;

        btn.addEventListener('click', () => {

            btn_categories.forEach(myFunction);

            function myFunction(value, index, array) {
                value.classList.remove('active');            
            }

           btn.classList.add('active');
        
            for (j = 0; j < pizza_wrapper.length; j++) {

                pizza_wrapper[j].classList.add('d-none');

                if (pizza_wrapper[j].dataset.pizza == id) {

                     pizza_wrapper[j].classList.remove('d-none');

                }else if (id == 'all') {

                    pizza_wrapper[j].classList.remove('d-none');
                }            
            }
        });
    }
}

</script>
}